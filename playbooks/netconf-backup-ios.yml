# ansible-playbook netconf-backup.yml
# -f #forks (optional) means the # of processes to execute in parallel.
# -l xxx limit the playbook to the specified hosts
---
- name: Cisco IOS - Network configuration backup
  hosts: all
  gather_facts: false
  connection: network_cli
  # By default Ansible won't start a new task group until the previous one in fully completed for all the hosts.
  # With strategy free you can ask to continue with all the tasks per host without waiting. And limited in this
  # case by the number of forks.
  # The downside is that the output to screen sequence will be messy. Once you know
  # that the playbook works fine, then enable strategy free to real speed up the whole playbook execution.
  #
  # strategy: free

  tasks:

    - name: Cisco IOS - show running-config
      ios_command:
        commands: 'show running-config'
      register: output_ios
      ignore_errors: yes
      when: ansible_network_os == 'ios'

    - name: Cisco IOS - Save the output
      command:
        argv:
          - python3
          - scripts/netconf-backup.py
          - "{{ inventory_hostname }}"
          - "{{ output_ios.stdout[0] }}"
      delegate_to: localhost
      when: ansible_network_os == 'ios' and output_ios.failed == false

    - name: Cisco IOS - Sending an e-mail if host backup failed
      mail:
        host: smtp.xxx.com
        port: 587
        sender: xxx@yyy
        username: xxx@yyy
        password: xxx
        to: xxx@yyy
        subject: Configuration backup failed on host {{ inventory_hostname }}
        body: "Error message: {{ output_ios.msg }}"
      delegate_to: localhost
      when: ansible_network_os == 'ios' and output_ios.failed == true
